from pydantic import BaseModel, Field, Extra


class Router(BaseModel):
    """Router Pydantic class.

    Args:
        decision : Stores the decision made by the router
    """

    decision: str = Field(
        description="This field contains the decision made by the model between SUMMARIZER, CODER or END"
    )
    class Config:
        extra = Extra.forbid  # Forbid extra fields not defined in the model


class Coder(BaseModel):


    code: str = Field(None, description="Just the Code generated by the model")
    filename: str = Field(
        description="filename for the generated code. It should also have appropriate extension"
    )
    class Config:
        extra = Extra.forbid  # Forbid extra fields not defined in the model


class Summarizer(BaseModel):
    """Summarizer Pydantic class.
    Args:
        code (str) : Summary of the  content generated by the model.
        filename(str) : Filename created by the model.
    """

    summary: str = Field(description="your elaborate answer here")
    filename: str = Field(
        description="This field contains the file name for elaborate summary . It should **strictly** have .txt extension"
    )

    class Config:
        extra = Extra.forbid  # Forbid extra fields not defined in the model
